<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iw.cf.mybatis.Composer">
    <resultMap id="resultMap" type="com.iw.cf.core.dto.Composer">
        <id property="id" column="id" jdbcType="NUMERIC"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="completeName" column="complete_name" jdbcType="VARCHAR"/>
        <result property="eraId" column="era_id" jdbcType="VARCHAR"/>
        <result property="birthDate" column="birth_date" jdbcType="TIMESTAMP"/>
        <result property="deathDate" column="death_date" jdbcType="TIMESTAMP"/>
        <result property="popular" column="popular" jdbcType="BOOLEAN"/>
        <result property="recommended" column="recommended" jdbcType="BOOLEAN"/>
        <result property="imageId" column="image_id" jdbcType="NUMERIC"/>
    </resultMap>

    <sql id="selectFromSql">
        SELECT c.id,
               c.name,
               c.complete_name,
               c.era_id,
               c.birth_date,
               c.death_date,
               c.popular,
               c.recommended,
               c.image_id
        FROM composers c
    </sql>

    <insert id="insert" parameterType="com.iw.cf.core.dto.Composer"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO composers(name,
                              complete_name,
                              era_id,
                              birth_date,
                              death_date,
                              popular,
                              recommended,
                              image_id)
        VALUES (#{name,jdbcType=VARCHAR},
                #{completeName,jdbcType=VARCHAR},
                #{eraId,jdbcType=NUMERIC},
                #{birthDate,jdbcType=TIMESTAMP},
                #{deathDate,jdbcType=TIMESTAMP},
                #{popular,jdbcType=BOOLEAN},
                #{recommended,jdbcType=BOOLEAN},
                #{imageId,jdbcType=NUMERIC})
    </insert>

    <delete id="deleteAll">
        DELETE
        FROM composers
    </delete>

    <select id="getById" parameterType="Long" resultMap="resultMap">
        <include refid="selectFromSql"/>
        WHERE id = #{id,jdbcType=NUMERIC}
    </select>

    <select id="getByGenre" parameterType="Long" resultMap="resultMap">
        <include refid="selectFromSql"/>
        WHERE (
        SELECT COUNT(1)
        FROM works w
        JOIN work_videos wv ON wv.work_id = w.id
        WHERE w.genre_id = #{genreId,jdbcType=NUMERIC}
        AND w.composer_id = c.id) &lt;&gt; 0
        ORDER BY popular DESC, recommended DESC, UPPER(c.name)
    </select>

    <select id="getByEra" parameterType="Long" resultMap="resultMap">
        <include refid="selectFromSql"/>
        WHERE c.era_id = #{eraId,jdbcType=NUMERIC}
        AND (
        SELECT COUNT(1)
        FROM works w
        JOIN work_videos wv ON wv.work_id = w.id
        AND w.composer_id = c.id) &lt;&gt; 0
        ORDER BY popular DESC, recommended DESC, UPPER(c.name)
    </select>

    <select id="getWithVideos" resultMap="resultMap">
        <include refid="selectFromSql"/>
        WHERE (
        SELECT COUNT(1)
        FROM works w
        JOIN work_videos wv ON wv.work_id = w.id
        AND w.composer_id = c.id) &lt;&gt; 0
        ORDER BY popular DESC, recommended DESC, UPPER(c.name)
    </select>
</mapper>